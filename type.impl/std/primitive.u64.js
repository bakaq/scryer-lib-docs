(function() {var type_impls = {
"dashu":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitTest-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#impl-BitTest-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.BitTest.html\" title=\"trait dashu::integer::ops::BitTest\">BitTest</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.bit_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.BitTest.html#tymethod.bit_len\" class=\"fn\">bit_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Effective bit length of the binary representation. <a href=\"dashu/integer/ops/trait.BitTest.html#tymethod.bit_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.bit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.BitTest.html#tymethod.bit\" class=\"fn\">bit</a>(&amp;self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the <code>n</code>-th bit is set in its two’s complement binary representation, n starts from 0.</div></details></div></details>","BitTest","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CubicRoot-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#impl-CubicRoot-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/float/ops/trait.CubicRoot.html\" title=\"trait dashu::float::ops::CubicRoot\">CubicRoot</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/float/ops/trait.CubicRoot.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/float/ops/trait.CubicRoot.html#tymethod.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></div></details>","CubicRoot","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CubicRootRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#impl-CubicRootRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.CubicRootRem.html\" title=\"trait dashu::integer::ops::CubicRootRem\">CubicRootRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.CubicRootRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.cbrt_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#method.cbrt_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.CubicRootRem.html#tymethod.cbrt_rem\" class=\"fn\">cbrt_rem</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","CubicRootRem","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.DivEuclid.html\" title=\"trait dashu::rational::ops::DivEuclid\">DivEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.DivEuclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></div></details>","DivEuclid","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.DivRem.html\" title=\"trait dashu::integer::ops::DivRem\">DivRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputDiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputDiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.DivRem.html#associatedtype.OutputDiv\" class=\"associatedtype\">OutputDiv</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.DivRem.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.DivRem.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","DivRem","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRemAssign-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivRemAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.DivRemAssign.html\" title=\"trait dashu::integer::ops::DivRemAssign\">DivRemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.DivRemAssign.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.DivRemAssign.html#tymethod.div_rem_assign\" class=\"fn\">div_rem_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></div></details>","DivRemAssign","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRemEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivRemEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.DivRemEuclid.html\" title=\"trait dashu::rational::ops::DivRemEuclid\">DivRemEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputDiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputDiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#associatedtype.OutputDiv\" class=\"associatedtype\">OutputDiv</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#tymethod.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","DivRemEuclid","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EstimatedLog2-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/log.rs.html#262\">source</a><a href=\"#impl-EstimatedLog2-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.EstimatedLog2.html\" title=\"trait dashu::rational::ops::EstimatedLog2\">EstimatedLog2</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2_bounds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/log.rs.html#262\">source</a><a href=\"#method.log2_bounds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\" class=\"fn\">log2_bounds</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Estimate the bounds of the binary logarithm. <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2_est\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/log.rs.html#262\">source</a><a href=\"#method.log2_est\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#method.log2_est\" class=\"fn\">log2_est</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Estimate the value of the binary logarithm. It’s calculated as the\naverage of <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\" title=\"method dashu::rational::ops::EstimatedLog2::log2_bounds\">log2_bounds</a> by default.</div></details></div></details>","EstimatedLog2","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExtendedGcd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#impl-ExtendedGcd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.ExtendedGcd.html\" title=\"trait dashu::integer::ops::ExtendedGcd\">ExtendedGcd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputGcd\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputGcd\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.ExtendedGcd.html#associatedtype.OutputGcd\" class=\"associatedtype\">OutputGcd</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.OutputCoeff\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputCoeff\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.ExtendedGcd.html#associatedtype.OutputCoeff\" class=\"associatedtype\">OutputCoeff</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_ext\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#method.gcd_ext\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.ExtendedGcd.html#tymethod.gcd_ext\" class=\"fn\">gcd_ext</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Calculate the greatest common divisor between the two operands, returns\nthe common divisor <code>g</code> and the Bézout coefficients respectively. <a href=\"dashu/integer/ops/trait.ExtendedGcd.html#tymethod.gcd_ext\">Read more</a></div></details></div></details>","ExtendedGcd","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Gcd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#impl-Gcd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.Gcd.html\" title=\"trait dashu::integer::ops::Gcd\">Gcd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.Gcd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.Gcd.html#tymethod.gcd\" class=\"fn\">gcd</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"dashu/integer/ops/trait.Gcd.html\" title=\"trait dashu::integer::ops::Gcd\">Gcd</a>&gt;::<a class=\"associatedtype\" href=\"dashu/integer/ops/trait.Gcd.html#associatedtype.Output\" title=\"type dashu::integer::ops::Gcd::Output\">Output</a></h4></section></summary><div class='docblock'>Compute the greatest common divisor between the two operands. <a href=\"dashu/integer/ops/trait.Gcd.html#tymethod.gcd\">Read more</a></div></details></div></details>","Gcd","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRing%3C'a,+ConstDivisor%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/modular/convert.rs.html#174\">source</a><a href=\"#impl-IntoRing%3C'a,+ConstDivisor%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"dashu/integer/modular/trait.IntoRing.html\" title=\"trait dashu::integer::modular::IntoRing\">IntoRing</a>&lt;'a, <a class=\"struct\" href=\"dashu/integer/fast_div/struct.ConstDivisor.html\" title=\"struct dashu::integer::fast_div::ConstDivisor\">ConstDivisor</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RingElement\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RingElement\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/modular/trait.IntoRing.html#associatedtype.RingElement\" class=\"associatedtype\">RingElement</a> = <a class=\"struct\" href=\"dashu/integer/modular/struct.Reduced.html\" title=\"struct dashu::integer::modular::Reduced\">Reduced</a>&lt;'a&gt;</h4></section><section id=\"method.into_ring\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/modular/convert.rs.html#174\">source</a><a href=\"#method.into_ring\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/modular/trait.IntoRing.html#tymethod.into_ring\" class=\"fn\">into_ring</a>(self, ring: &amp;'a <a class=\"struct\" href=\"dashu/integer/fast_div/struct.ConstDivisor.html\" title=\"struct dashu::integer::fast_div::ConstDivisor\">ConstDivisor</a>) -&gt; <a class=\"struct\" href=\"dashu/integer/modular/struct.Reduced.html\" title=\"struct dashu::integer::modular::Reduced\">Reduced</a>&lt;'a&gt;</h4></section></div></details>","IntoRing<'a, ConstDivisor>","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PowerOfTwo-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#impl-PowerOfTwo-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.PowerOfTwo.html\" title=\"trait dashu::integer::ops::PowerOfTwo\">PowerOfTwo</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.is_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.PowerOfTwo.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Test if self is a power of two (<code>2^k</code>)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.PowerOfTwo.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Get the smallest power of two greater than or equal to self.</div></details></div></details>","PowerOfTwo","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-RemEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.RemEuclid.html\" title=\"trait dashu::rational::ops::RemEuclid\">RemEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.RemEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.RemEuclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></div></details>","RemEuclid","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SquareRoot-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#impl-SquareRoot-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/float/ops/trait.SquareRoot.html\" title=\"trait dashu::float::ops::SquareRoot\">SquareRoot</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/float/ops/trait.SquareRoot.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/float/ops/trait.SquareRoot.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></div></details>","SquareRoot","dashu::rational::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SquareRootRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#impl-SquareRootRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/integer/ops/trait.SquareRootRem.html\" title=\"trait dashu::integer::ops::SquareRootRem\">SquareRootRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu/integer/ops/trait.SquareRootRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.sqrt_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#method.sqrt_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu/integer/ops/trait.SquareRootRem.html#tymethod.sqrt_rem\" class=\"fn\">sqrt_rem</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","SquareRootRem","dashu::rational::Word"]],
"dashu_float":[],
"dashu_int":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26IBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#impl-Add%3C%26IBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'r IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26UBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#impl-Add%3C%26UBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'r UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CIBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#impl-Add%3CIBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#impl-Add%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26UBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#impl-BitAnd%3C%26UBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&'r UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#impl-BitAnd%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26UBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#impl-BitOr%3C%26UBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&'r UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#impl-BitOr%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitTest-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#impl-BitTest-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.BitTest.html\" title=\"trait dashu_int::ops::BitTest\">BitTest</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.bit_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.BitTest.html#tymethod.bit_len\" class=\"fn\">bit_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Effective bit length of the binary representation. <a href=\"dashu_int/ops/trait.BitTest.html#tymethod.bit_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.bit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.BitTest.html#tymethod.bit\" class=\"fn\">bit</a>(&amp;self, position: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the <code>n</code>-th bit is set in its two’s complement binary representation, n starts from 0.</div></details></div></details>","BitTest","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26UBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#impl-BitXor%3C%26UBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&'r UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#impl-BitXor%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/bits.rs.html#1065\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CubicRoot-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#impl-CubicRoot-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.CubicRoot.html\" title=\"trait dashu_int::ops::CubicRoot\">CubicRoot</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.CubicRoot.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.CubicRoot.html#tymethod.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></div></details>","CubicRoot","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CubicRootRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#impl-CubicRootRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.CubicRootRem.html\" title=\"trait dashu_int::ops::CubicRootRem\">CubicRootRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.CubicRootRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.cbrt_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#method.cbrt_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.CubicRootRem.html#tymethod.cbrt_rem\" class=\"fn\">cbrt_rem</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","CubicRootRem","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.DivEuclid.html\" title=\"trait dashu_int::ops::DivEuclid\">DivEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.DivEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.DivEuclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></div></details>","DivEuclid","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.DivRem.html\" title=\"trait dashu_int::ops::DivRem\">DivRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputDiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputDiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.DivRem.html#associatedtype.OutputDiv\" class=\"associatedtype\">OutputDiv</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.DivRem.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.DivRem.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","DivRem","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRemAssign-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivRemAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.DivRemAssign.html\" title=\"trait dashu_int::ops::DivRemAssign\">DivRemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.DivRemAssign.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.DivRemAssign.html#tymethod.div_rem_assign\" class=\"fn\">div_rem_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></div></details>","DivRemAssign","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRemEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-DivRemEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.DivRemEuclid.html\" title=\"trait dashu_int::ops::DivRemEuclid\">DivRemEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputDiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputDiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.DivRemEuclid.html#associatedtype.OutputDiv\" class=\"associatedtype\">OutputDiv</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.DivRemEuclid.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.DivRemEuclid.html#tymethod.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","DivRemEuclid","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EstimatedLog2-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/log.rs.html#262\">source</a><a href=\"#impl-EstimatedLog2-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.EstimatedLog2.html\" title=\"trait dashu_int::ops::EstimatedLog2\">EstimatedLog2</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2_bounds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/log.rs.html#262\">source</a><a href=\"#method.log2_bounds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\" class=\"fn\">log2_bounds</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Estimate the bounds of the binary logarithm. <a href=\"dashu_int/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2_est\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/log.rs.html#262\">source</a><a href=\"#method.log2_est\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.EstimatedLog2.html#method.log2_est\" class=\"fn\">log2_est</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Estimate the value of the binary logarithm. It’s calculated as the\naverage of <a href=\"dashu_int/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\" title=\"method dashu_int::ops::EstimatedLog2::log2_bounds\">log2_bounds</a> by default.</div></details></div></details>","EstimatedLog2","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExtendedGcd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#impl-ExtendedGcd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.ExtendedGcd.html\" title=\"trait dashu_int::ops::ExtendedGcd\">ExtendedGcd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputGcd\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputGcd\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.ExtendedGcd.html#associatedtype.OutputGcd\" class=\"associatedtype\">OutputGcd</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"associatedtype.OutputCoeff\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputCoeff\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.ExtendedGcd.html#associatedtype.OutputCoeff\" class=\"associatedtype\">OutputCoeff</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_ext\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#method.gcd_ext\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.ExtendedGcd.html#tymethod.gcd_ext\" class=\"fn\">gcd_ext</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Calculate the greatest common divisor between the two operands, returns\nthe common divisor <code>g</code> and the Bézout coefficients respectively. <a href=\"dashu_int/ops/trait.ExtendedGcd.html#tymethod.gcd_ext\">Read more</a></div></details></div></details>","ExtendedGcd","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Gcd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#impl-Gcd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.Gcd.html\" title=\"trait dashu_int::ops::Gcd\">Gcd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.Gcd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/gcd.rs.html#248\">source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.Gcd.html#tymethod.gcd\" class=\"fn\">gcd</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"dashu_int/ops/trait.Gcd.html\" title=\"trait dashu_int::ops::Gcd\">Gcd</a>&gt;::<a class=\"associatedtype\" href=\"dashu_int/ops/trait.Gcd.html#associatedtype.Output\" title=\"type dashu_int::ops::Gcd::Output\">Output</a></h4></section></summary><div class='docblock'>Compute the greatest common divisor between the two operands. <a href=\"dashu_int/ops/trait.Gcd.html#tymethod.gcd\">Read more</a></div></details></div></details>","Gcd","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRing%3C'a,+ConstDivisor%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/modular/convert.rs.html#174\">source</a><a href=\"#impl-IntoRing%3C'a,+ConstDivisor%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"dashu_int/modular/trait.IntoRing.html\" title=\"trait dashu_int::modular::IntoRing\">IntoRing</a>&lt;'a, <a class=\"struct\" href=\"dashu_int/fast_div/struct.ConstDivisor.html\" title=\"struct dashu_int::fast_div::ConstDivisor\">ConstDivisor</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RingElement\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RingElement\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/modular/trait.IntoRing.html#associatedtype.RingElement\" class=\"associatedtype\">RingElement</a> = <a class=\"struct\" href=\"dashu_int/modular/struct.Reduced.html\" title=\"struct dashu_int::modular::Reduced\">Reduced</a>&lt;'a&gt;</h4></section><section id=\"method.into_ring\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/modular/convert.rs.html#174\">source</a><a href=\"#method.into_ring\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/modular/trait.IntoRing.html#tymethod.into_ring\" class=\"fn\">into_ring</a>(self, ring: &amp;'a <a class=\"struct\" href=\"dashu_int/fast_div/struct.ConstDivisor.html\" title=\"struct dashu_int::fast_div::ConstDivisor\">ConstDivisor</a>) -&gt; <a class=\"struct\" href=\"dashu_int/modular/struct.Reduced.html\" title=\"struct dashu_int::modular::Reduced\">Reduced</a>&lt;'a&gt;</h4></section></div></details>","IntoRing<'a, ConstDivisor>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26IBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#48\">source</a><a href=\"#impl-Mul%3C%26IBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#48\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'r IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26UBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#40\">source</a><a href=\"#impl-Mul%3C%26UBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#40\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'r UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CIBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#48\">source</a><a href=\"#impl-Mul%3CIBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#48\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#40\">source</a><a href=\"#impl-Mul%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/mul_ops.rs.html#40\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3CIBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/third_party/num_order.rs.html#124\">source</a><a href=\"#impl-NumOrd%3CIBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/third_party/num_order.rs.html#124\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#93\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details></div></details>","NumOrd<IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/third_party/num_order.rs.html#88\">source</a><a href=\"#impl-NumOrd%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/third_party/num_order.rs.html#88\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#93\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details></div></details>","NumOrd<UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PowerOfTwo-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#impl-PowerOfTwo-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.PowerOfTwo.html\" title=\"trait dashu_int::ops::PowerOfTwo\">PowerOfTwo</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.is_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.PowerOfTwo.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Test if self is a power of two (<code>2^k</code>)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/bit.rs.html#98\">source</a><a href=\"#method.next_power_of_two\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.PowerOfTwo.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Get the smallest power of two greater than or equal to self.</div></details></div></details>","PowerOfTwo","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#impl-RemEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.RemEuclid.html\" title=\"trait dashu_int::ops::RemEuclid\">RemEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.RemEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/div_rem.rs.html#56\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.RemEuclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></div></details>","RemEuclid","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SquareRoot-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#impl-SquareRoot-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.SquareRoot.html\" title=\"trait dashu_int::ops::SquareRoot\">SquareRoot</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.SquareRoot.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/math/root.rs.html#64\">source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.SquareRoot.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></div></details>","SquareRoot","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SquareRootRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#impl-SquareRootRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu_int/ops/trait.SquareRootRem.html\" title=\"trait dashu_int::ops::SquareRootRem\">SquareRootRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dashu_int/ops/trait.SquareRootRem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.sqrt_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/ring/root.rs.html#414\">source</a><a href=\"#method.sqrt_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dashu_int/ops/trait.SquareRootRem.html#tymethod.sqrt_rem\" class=\"fn\">sqrt_rem</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>)</h4></section></div></details>","SquareRootRem","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26IBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#impl-Sub%3C%26IBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'r IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26UBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#impl-Sub%3C%26UBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'r UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CIBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#impl-Sub%3CIBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#96\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#impl-Sub%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/add_ops.rs.html#86\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26IBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#378\">source</a><a href=\"#impl-TryFrom%3C%26IBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#378\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26UBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#308\">source</a><a href=\"#impl-TryFrom%3C%26UBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#308\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&UBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CIBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#378\">source</a><a href=\"#impl-TryFrom%3CIBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#378\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"dashu_int/struct.IBig.html\" title=\"struct dashu_int::IBig\">IBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<IBig>","dashu_int::Word"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CUBig%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#308\">source</a><a href=\"#impl-TryFrom%3CUBig%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_int/convert.rs.html#308\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"dashu_int/struct.UBig.html\" title=\"struct dashu_int::UBig\">UBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"dashu_base/error/enum.ConversionError.html\" title=\"enum dashu_base::error::ConversionError\">ConversionError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<UBig>","dashu_int::Word"]],
"libffi":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CType-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/libffi/high/types.rs.html#78\">source</a><a href=\"#impl-CType-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"libffi/high/types/trait.CType.html\" title=\"trait libffi::high::types::CType\">CType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libffi/high/types.rs.html#78\">source</a><a href=\"#method.reify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libffi/high/types/trait.CType.html#tymethod.reify\" class=\"fn\">reify</a>() -&gt; <a class=\"struct\" href=\"libffi/high/types/struct.Type.html\" title=\"struct libffi::high::types::Type\">Type</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Creates or retrieves a <code>Type&lt;T&gt;</code> for any type <code>T: CType</code>. <a href=\"libffi/high/types/trait.CType.html#tymethod.reify\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.RetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"libffi/high/types/trait.CType.html#associatedtype.RetType\" class=\"associatedtype\">RetType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The low-level libffi library implicitly extends small integer\nreturn values to <code>ffi_arg</code> or <code>ffi_sarg</code>.  Track the possibly\nextended variant of <code>T</code> as an associated type here.</div></details></div></details>","CType","libffi::low::ffi_arg"]],
"nix":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CPollTimeout%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/nix/poll_timeout.rs.html#174-179\">source</a><a href=\"#impl-TryFrom%3CPollTimeout%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"nix/poll/struct.PollTimeout.html\" title=\"struct nix::poll::PollTimeout\">PollTimeout</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nix/poll_timeout.rs.html#176-178\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(x: <a class=\"struct\" href=\"nix/poll/struct.PollTimeout.html\" title=\"struct nix::poll::PollTimeout\">PollTimeout</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<PollTimeout>","nix::sys::stat::dev_t"]],
"openssl_sys":[],
"phf_shared":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FmtConst-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#153\">source</a><a href=\"#impl-FmtConst-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.FmtConst.html\" title=\"trait phf_shared::FmtConst\">FmtConst</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_const\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#153\">source</a><a href=\"#method.fmt_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.FmtConst.html#tymethod.fmt_const\" class=\"fn\">fmt_const</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Print a <code>const</code> expression representing this value.</div></details></div></details>","FmtConst","phf_shared::HashKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfBorrow%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#172-189\">source</a><a href=\"#impl-PhfBorrow%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.PhfBorrow.html\" title=\"trait phf_shared::PhfBorrow\">PhfBorrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#172-189\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfBorrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a reference to <code>self</code> to a reference to the borrowed type.</div></details></div></details>","PhfBorrow<u64>","phf_shared::HashKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfHash-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#357\">source</a><a href=\"#impl-PhfHash-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.PhfHash.html\" title=\"trait phf_shared::PhfHash\">PhfHash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#357\">source</a><a href=\"#method.phf_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfHash.html#tymethod.phf_hash\" class=\"fn\">phf_hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds the value into the state given, updating the hasher as necessary.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#72-79\">source</a><a href=\"#method.phf_hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfHash.html#method.phf_hash_slice\" class=\"fn\">phf_hash_slice</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the state provided.</div></details></div></details>","PhfHash","phf_shared::HashKey"]],
"rustix":[],
"serde":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()