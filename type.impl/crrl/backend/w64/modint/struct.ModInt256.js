(function() {var type_impls = {
"crrl":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2246-2259\">source</a><a href=\"#impl-Add%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2252-2258\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2231-2244\">source</a><a href=\"#impl-Add-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2237-2243\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2300-2307\">source</a><a href=\"#impl-AddAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2304-2306\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2291-2298\">source</a><a href=\"#impl-AddAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2295-2297\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#7\">source</a><a href=\"#impl-Clone-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#7\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#7\">source</a><a href=\"#impl-Debug-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#7\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2324-2337\">source</a><a href=\"#impl-Div%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2330-2336\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2309-2322\">source</a><a href=\"#impl-Div-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2315-2321\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2378-2385\">source</a><a href=\"#impl-DivAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2382-2384\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2369-2376\">source</a><a href=\"#impl-DivAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2373-2375\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3C13822214165235122497,+13451932020343611451,+18446744073709551614,+u64::MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/secp256k1.rs.html#102-107\">source</a><a href=\"#impl-ModInt256%3C13822214165235122497,+13451932020343611451,+18446744073709551614,+u64::MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;13822214165235122497, 13451932020343611451, 18446744073709551614, u64::MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/secp256k1.rs.html#104-106\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode\" class=\"fn\">encode</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Encodes a scalar element into bytes (little-endian).</p>\n</div></details></div></details>",0,"crrl::backend::w64::ModInt256ct"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3C15920977183462478535,+3084779354193624835,+0,+4611686018427387904%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/jq255s.rs.html#87-92\">source</a><a href=\"#impl-ModInt256%3C15920977183462478535,+3084779354193624835,+0,+4611686018427387904%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;15920977183462478535, 3084779354193624835, 0, 4611686018427387904&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/jq255s.rs.html#89-91\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode\" class=\"fn\">encode</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Encodes a scalar element into bytes (little-endian).</p>\n</div></details></div></details>",0,"crrl::backend::w64::ModInt256ct"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3C17562291160714782033,+13611842547513532036,+u64::MAX,+18446744069414584320%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/p256.rs.html#138-143\">source</a><a href=\"#impl-ModInt256%3C17562291160714782033,+13611842547513532036,+u64::MAX,+18446744069414584320%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;17562291160714782033, 13611842547513532036, u64::MAX, 18446744069414584320&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/p256.rs.html#140-142\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode\" class=\"fn\">encode</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Encodes a scalar element into bytes (little-endian).</p>\n</div></details></div></details>",0,"crrl::backend::w64::ModInt256ct"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3C2257087014876235045,+11316581657718787155,+u64::MAX,+4611686018427387903%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/jq255e.rs.html#88-93\">source</a><a href=\"#impl-ModInt256%3C2257087014876235045,+11316581657718787155,+u64::MAX,+4611686018427387903%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;2257087014876235045, 11316581657718787155, u64::MAX, 4611686018427387903&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/jq255e.rs.html#90-92\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode\" class=\"fn\">encode</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Encodes a scalar element into bytes (little-endian).</p>\n</div></details></div></details>",0,"crrl::backend::w64::ModInt256ct"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3C4376904538686917877,+4547025796284947885,+0,+2305843009213693952%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/gls254.rs.html#86-102\">source</a><a href=\"#impl-ModInt256%3C4376904538686917877,+4547025796284947885,+0,+2305843009213693952%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;4376904538686917877, 4547025796284947885, 0, 2305843009213693952&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/gls254.rs.html#88-90\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode\" class=\"fn\">encode</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Encodes a scalar element into bytes (little-endian).</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MU\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/crrl/gls254.rs.html#94-96\">source</a><h4 class=\"code-header\">pub const <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#associatedconstant.MU\" class=\"constant\">MU</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>The square root of -1 that corresponds to the zeta() endomorphism\non the curve.</p>\n</div></details></div></details>",0,"crrl::backend::w64::ModInt256ct"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3C6346243789798364141,+1503914060200516822,+0,+1152921504606846976%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/ed25519.rs.html#124-129\">source</a><a href=\"#impl-ModInt256%3C6346243789798364141,+1503914060200516822,+0,+1152921504606846976%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;6346243789798364141, 1503914060200516822, 0, 1152921504606846976&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/ed25519.rs.html#126-128\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode\" class=\"fn\">encode</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Encodes a scalar element into bytes (little-endian).</p>\n</div></details></div></details>",0,"crrl::backend::w64::ModInt256ct"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#10-2225\">source</a><a href=\"#impl-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.MODULUS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#26\">source</a><h4 class=\"code-header\">pub const <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#associatedconstant.MODULUS\" class=\"constant\">MODULUS</a>: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">4</a>] = _</h4></section><section id=\"associatedconstant.ENC_LEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#29-41\">source</a><h4 class=\"code-header\">pub const <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#associatedconstant.ENC_LEN\" class=\"constant\">ENC_LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a> = _</h4></section><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#57-58\">source</a><h4 class=\"code-header\">pub const <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt; = _</h4></section><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#59-60\">source</a><h4 class=\"code-header\">pub const <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt; = _</h4></section><section id=\"associatedconstant.MINUS_ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#61-62\">source</a><h4 class=\"code-header\">pub const <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#associatedconstant.MINUS_ONE\" class=\"constant\">MINUS_ONE</a>: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt; = _</h4></section><section id=\"method.w64le\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#77-79\">source</a><h4 class=\"code-header\">pub const fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.w64le\" class=\"fn\">w64le</a>(x0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section><section id=\"method.w64be\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#87-89\">source</a><h4 class=\"code-header\">pub const fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.w64be\" class=\"fn\">w64be</a>(x3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section><section id=\"method.from_w64le\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#97-101\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_w64le\" class=\"fn\">from_w64le</a>(x0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section><section id=\"method.from_w64be\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#109-113\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_w64be\" class=\"fn\">from_w64be</a>(x3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, x0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section><section id=\"method.from_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#119-123\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_i32\" class=\"fn\">from_i32</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; Self</h4></section><section id=\"method.from_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#127-129\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_u32\" class=\"fn\">from_u32</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section><section id=\"method.from_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#135-139\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>) -&gt; Self</h4></section><section id=\"method.from_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#143-145\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section><section id=\"method.from_i128\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#151-155\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_i128\" class=\"fn\">from_i128</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>) -&gt; Self</h4></section><section id=\"method.from_u128\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#159-161\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.from_u128\" class=\"fn\">from_u128</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>) -&gt; Self</h4></section><section id=\"method.set_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#247-264\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.set_neg\" class=\"fn\">set_neg</a>(&amp;mut self)</h4></section><section id=\"method.set_cond\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#271-277\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.set_cond\" class=\"fn\">set_cond</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>, ctl: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>)</h4></section><section id=\"method.select\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#282-286\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.select\" class=\"fn\">select</a>(a0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>, a1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>, ctl: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section><section id=\"method.cswap\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#292-298\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.cswap\" class=\"fn\">cswap</a>(a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut Self</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut Self</a>, ctl: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>)</h4></section><section id=\"method.set_square\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#617-777\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.set_square\" class=\"fn\">set_square</a>(&amp;mut self)</h4></section><section id=\"method.square\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#781-785\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.square\" class=\"fn\">square</a>(self) -&gt; Self</h4></section><section id=\"method.set_xsquare\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#789-793\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.set_xsquare\" class=\"fn\">set_xsquare</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>)</h4></section><section id=\"method.xsquare\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#797-801\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.xsquare\" class=\"fn\">xsquare</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section><section id=\"method.half\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#824-828\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.half\" class=\"fn\">half</a>(self) -&gt; Self</h4></section><section id=\"method.mul2\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#837-841\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.mul2\" class=\"fn\">mul2</a>(self) -&gt; Self</h4></section><section id=\"method.mul3\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#851-855\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.mul3\" class=\"fn\">mul3</a>(self) -&gt; Self</h4></section><section id=\"method.mul4\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#866-870\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.mul4\" class=\"fn\">mul4</a>(self) -&gt; Self</h4></section><section id=\"method.mul8\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#883-887\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.mul8\" class=\"fn\">mul8</a>(self) -&gt; Self</h4></section><section id=\"method.mul16\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#902-906\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.mul16\" class=\"fn\">mul16</a>(self) -&gt; Self</h4></section><section id=\"method.mul32\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#923-927\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.mul32\" class=\"fn\">mul32</a>(self) -&gt; Self</h4></section><section id=\"method.batch_invert\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1257-1290\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.batch_invert\" class=\"fn\">batch_invert</a>(xx: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>)</h4></section><section id=\"method.legendre\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1296-1440\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.legendre\" class=\"fn\">legendre</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section><section id=\"method.sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1526-1530\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>)</h4></section><section id=\"method.split_vartime\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1610-1785\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.split_vartime\" class=\"fn\">split_vartime</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>)</h4></section><section id=\"method.equals\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1797-1803\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.equals\" class=\"fn\">equals</a>(self, rhs: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.iszero\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1808-1811\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.iszero\" class=\"fn\">iszero</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.encode32\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1842-1851\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode32\" class=\"fn\">encode32</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section><section id=\"method.set_decode32\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1860-1888\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.set_decode32\" class=\"fn\">set_decode32</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.decode32\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1900-1904\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.decode32\" class=\"fn\">decode32</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>)</h4></section><section id=\"method.set_decode_ct\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1913-1922\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.set_decode_ct\" class=\"fn\">set_decode_ct</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.decode_ct\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1931-1935\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.decode_ct\" class=\"fn\">decode_ct</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>)</h4></section><section id=\"method.decode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1944-1951\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.decode\" class=\"fn\">decode</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section><section id=\"method.set_decode_reduce\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1956-1979\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.set_decode_reduce\" class=\"fn\">set_decode_reduce</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>])</h4></section><section id=\"method.decode_reduce\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#1985-1989\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.decode_reduce\" class=\"fn\">decode_reduce</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section></div></details>",0,"crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModInt256%3Cu64::MAX,+4294967295,+0,+18446744069414584321%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/mod.rs.html#149-154\">source</a><a href=\"#impl-ModInt256%3Cu64::MAX,+4294967295,+0,+18446744069414584321%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;u64::MAX, 4294967295, 0, 18446744069414584321&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/mod.rs.html#151-153\">source</a><h4 class=\"code-header\">pub fn <a href=\"crrl/backend/w64/modint/struct.ModInt256.html#tymethod.encode\" class=\"fn\">encode</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]</h4></section></summary><div class=\"docblock\"><p>Encodes a scalar element into bytes (little-endian).</p>\n</div></details></div></details>",0,"crrl::backend::w64::ModInt256ct"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2402-2415\">source</a><a href=\"#impl-Mul%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2408-2414\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2387-2400\">source</a><a href=\"#impl-Mul-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2393-2399\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2456-2463\">source</a><a href=\"#impl-MulAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2460-2462\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2447-2454\">source</a><a href=\"#impl-MulAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2451-2453\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2465-2476\">source</a><a href=\"#impl-Neg-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2471-2475\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2506-2519\">source</a><a href=\"#impl-Sub%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2512-2518\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2491-2504\">source</a><a href=\"#impl-Sub-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2497-2503\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;) -&gt; <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2560-2567\">source</a><a href=\"#impl-SubAssign%3C%26ModInt256%3CM0,+M1,+M2,+M3%3E%3E-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;&gt; for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2564-2566\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&ModInt256<M0, M1, M2, M3>>","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2551-2558\">source</a><a href=\"#impl-SubAssign-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#2555-2557\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"],["<section id=\"impl-Copy-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/crrl/backend/w64/modint.rs.html#7\">source</a><a href=\"#impl-Copy-for-ModInt256%3CM0,+M1,+M2,+M3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const M0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, const M3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"crrl/backend/w64/modint/struct.ModInt256.html\" title=\"struct crrl::backend::w64::modint::ModInt256\">ModInt256</a>&lt;M0, M1, M2, M3&gt;</h3></section>","Copy","crrl::backend::w64::ModInt256ct","crrl::backend::w64::GFp256","crrl::ed25519::Scalar","crrl::jq255e::Scalar","crrl::jq255s::Scalar","crrl::p256::Scalar","crrl::secp256k1::Scalar"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()