(function() {var type_impls = {
"dashu":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Abs-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#183\">source</a><a href=\"#impl-Abs-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.Abs.html\" title=\"trait dashu::rational::ops::Abs\">Abs</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.Abs.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#186\">source</a><a href=\"#method.abs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.Abs.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; &lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> as <a class=\"trait\" href=\"dashu/rational/ops/trait.Abs.html\" title=\"trait dashu::rational::ops::Abs\">Abs</a>&gt;::<a class=\"associatedtype\" href=\"dashu/rational/ops/trait.Abs.html#associatedtype.Output\" title=\"type dashu::rational::ops::Abs::Output\">Output</a></h4></section></div></details>","Abs","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsEq-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#67\">source</a><a href=\"#impl-AbsEq-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/base/trait.AbsEq.html\" title=\"trait dashu::base::AbsEq\">AbsEq</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#69\">source</a><a href=\"#method.abs_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.AbsEq.html#tymethod.abs_eq\" class=\"fn\">abs_eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.5.0: AbsEq will be moved in AbsOrd in v0.5</span></div></span></details></div></details>","AbsEq","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsOrd%3CFBig%3CR,+B%3E%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#327\">source</a><a href=\"#impl-AbsOrd%3CFBig%3CR,+B%3E%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;R, const B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"dashu/base/trait.AbsOrd.html\" title=\"trait dashu::base::AbsOrd\">AbsOrd</a>&lt;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"dashu/float/round/trait.Round.html\" title=\"trait dashu::float::round::Round\">Round</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.abs_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#329\">source</a><a href=\"#method.abs_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.AbsOrd.html#tymethod.abs_cmp\" class=\"fn\">abs_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></div></details>","AbsOrd<FBig<R, B>>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsOrd%3CIBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#257\">source</a><a href=\"#impl-AbsOrd%3CIBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/base/trait.AbsOrd.html\" title=\"trait dashu::base::AbsOrd\">AbsOrd</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.abs_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#257\">source</a><a href=\"#method.abs_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.AbsOrd.html#tymethod.abs_cmp\" class=\"fn\">abs_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></div></details>","AbsOrd<IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsOrd%3CRelaxed%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#170\">source</a><a href=\"#impl-AbsOrd%3CRelaxed%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/base/trait.AbsOrd.html\" title=\"trait dashu::base::AbsOrd\">AbsOrd</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.abs_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#170\">source</a><a href=\"#method.abs_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.AbsOrd.html#tymethod.abs_cmp\" class=\"fn\">abs_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></div></details>","AbsOrd<Relaxed>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsOrd%3CUBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#217\">source</a><a href=\"#impl-AbsOrd%3CUBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/base/trait.AbsOrd.html\" title=\"trait dashu::base::AbsOrd\">AbsOrd</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.abs_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#217\">source</a><a href=\"#method.abs_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.AbsOrd.html#tymethod.abs_cmp\" class=\"fn\">abs_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></div></details>","AbsOrd<UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsOrd-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#169\">source</a><a href=\"#impl-AbsOrd-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/base/trait.AbsOrd.html\" title=\"trait dashu::base::AbsOrd\">AbsOrd</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.abs_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#169\">source</a><a href=\"#method.abs_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.AbsOrd.html#tymethod.abs_cmp\" class=\"fn\">abs_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></div></details>","AbsOrd","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26IBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#88\">source</a><a href=\"#impl-Add%3C%26IBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#88\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'r IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#43\">source</a><a href=\"#impl-Add%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#43\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26UBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#87\">source</a><a href=\"#impl-Add%3C%26UBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#87\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'r UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CIBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#88\">source</a><a href=\"#impl-Add%3CIBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#88\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CUBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#87\">source</a><a href=\"#impl-Add%3CUBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#87\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#43\">source</a><a href=\"#impl-Add-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#43\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#45\">source</a><a href=\"#impl-AddAssign%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#45\">source</a><a href=\"#method.add_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#45\">source</a><a href=\"#impl-AddAssign-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#45\">source</a><a href=\"#method.add_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#246\">source</a><a href=\"#impl-Clone-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#248\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#252\">source</a><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/fmt.rs.html#33\">source</a><a href=\"#impl-Debug-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/fmt.rs.html#34\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#257\">source</a><a href=\"#impl-Default-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#259\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/fmt.rs.html#46\">source</a><a href=\"#impl-Display-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/fmt.rs.html#48\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26IBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#135\">source</a><a href=\"#impl-Div%3C%26IBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#135\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'r IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#46\">source</a><a href=\"#impl-Div%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#46\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26UBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#134\">source</a><a href=\"#impl-Div%3C%26UBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#134\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'r UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CIBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#135\">source</a><a href=\"#impl-Div%3CIBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#135\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#134\">source</a><a href=\"#impl-Div%3CUBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#134\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#46\">source</a><a href=\"#impl-Div-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#46\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#48\">source</a><a href=\"#impl-DivAssign%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#48\">source</a><a href=\"#method.div_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#48\">source</a><a href=\"#impl-DivAssign-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#48\">source</a><a href=\"#method.div_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivEuclid%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#179\">source</a><a href=\"#impl-DivEuclid%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"dashu/rational/ops/trait.DivEuclid.html\" title=\"trait dashu::rational::ops::DivEuclid\">DivEuclid</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#179\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.DivEuclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section></div></details>","DivEuclid<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivEuclid-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#179\">source</a><a href=\"#impl-DivEuclid-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.DivEuclid.html\" title=\"trait dashu::rational::ops::DivEuclid\">DivEuclid</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#179\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.DivEuclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section></div></details>","DivEuclid","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRemEuclid%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#237\">source</a><a href=\"#impl-DivRemEuclid%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"dashu/rational/ops/trait.DivRemEuclid.html\" title=\"trait dashu::rational::ops::DivRemEuclid\">DivRemEuclid</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputDiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputDiv\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#associatedtype.OutputDiv\" class=\"associatedtype\">OutputDiv</a> = <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#237\">source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#tymethod.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; (<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>, <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></div></details>","DivRemEuclid<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivRemEuclid-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#237\">source</a><a href=\"#impl-DivRemEuclid-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.DivRemEuclid.html\" title=\"trait dashu::rational::ops::DivRemEuclid\">DivRemEuclid</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.OutputDiv\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputDiv\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#associatedtype.OutputDiv\" class=\"associatedtype\">OutputDiv</a> = <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section><section id=\"associatedtype.OutputRem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputRem\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#associatedtype.OutputRem\" class=\"associatedtype\">OutputRem</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#237\">source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.DivRemEuclid.html#tymethod.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; (<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>, <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></div></details>","DivRemEuclid","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EstimatedLog2-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#264\">source</a><a href=\"#impl-EstimatedLog2-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.EstimatedLog2.html\" title=\"trait dashu::rational::ops::EstimatedLog2\">EstimatedLog2</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2_bounds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#266\">source</a><a href=\"#method.log2_bounds\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\" class=\"fn\">log2_bounds</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Estimate the bounds of the binary logarithm. <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log2_est\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#270\">source</a><a href=\"#method.log2_est\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#method.log2_est\" class=\"fn\">log2_est</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Estimate the value of the binary logarithm. Itโs calculated as the\naverage of <a href=\"dashu/rational/ops/trait.EstimatedLog2.html#tymethod.log2_bounds\" title=\"method dashu::rational::ops::EstimatedLog2::log2_bounds\">log2_bounds</a> by default.</div></details></div></details>","EstimatedLog2","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#79\">source</a><a href=\"#impl-From%3CIBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#79\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#78\">source</a><a href=\"#impl-From%3CUBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#78\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci128%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Ci128%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i128>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Ci16%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i16>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Ci32%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i32>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci64%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Ci64%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i64>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Ci8%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i8>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cisize%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Cisize%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<isize>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Cu128%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u128>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Cu16%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Cu32%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u32>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Cu64%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Cu8%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u8>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cusize%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#impl-From%3Cusize%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#108\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<usize>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/parse.rs.html#109\">source</a><a href=\"#impl-FromStr-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"dashu/base/enum.ParseError.html\" title=\"enum dashu::base::ParseError\">ParseError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/parse.rs.html#113\">source</a><a href=\"#method.from_str\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, <a class=\"enum\" href=\"dashu/base/enum.ParseError.html\" title=\"enum dashu::base::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#77\">source</a><a href=\"#impl-Hash-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#79\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inverse-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#253\">source</a><a href=\"#impl-Inverse-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/base/trait.Inverse.html\" title=\"trait dashu::base::Inverse\">Inverse</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/base/trait.Inverse.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section><section id=\"method.inv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#256\">source</a><a href=\"#method.inv\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.Inverse.html#tymethod.inv\" class=\"fn\">inv</a>(self) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></div></details>","Inverse","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26IBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#155\">source</a><a href=\"#impl-Mul%3C%26IBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#155\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'r IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#100\">source</a><a href=\"#impl-Mul%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#100\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26UBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#154\">source</a><a href=\"#impl-Mul%3C%26UBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#154\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'r UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CIBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#155\">source</a><a href=\"#impl-Mul%3CIBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#155\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CSign%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#136\">source</a><a href=\"#impl-Mul%3CSign%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#139\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Sign>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#154\">source</a><a href=\"#impl-Mul%3CUBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#154\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#100\">source</a><a href=\"#impl-Mul-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#100\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#101\">source</a><a href=\"#impl-MulAssign%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#101\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#101\">source</a><a href=\"#impl-MulAssign-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#101\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#87\">source</a><a href=\"#impl-Neg-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#90\">source</a><a href=\"#method.neg\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumHash-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#113\">source</a><a href=\"#impl-NumHash-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumHash.html\" title=\"trait num_order::NumHash\">NumHash</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#115\">source</a><a href=\"#method.num_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumHash.html#tymethod.num_hash\" class=\"fn\">num_hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Consistent <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" title=\"method core::hash::Hash::hash\">Hash::hash</a> on different numeric types. <a href=\"num_order/trait.NumHash.html#tymethod.num_hash\">Read more</a></div></details></div></details>","NumHash","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3CFBig%3CR,+B%3E%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#145\">source</a><a href=\"#impl-NumOrd%3CFBig%3CR,+B%3E%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;R, const B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"dashu/float/round/trait.Round.html\" title=\"trait dashu::float::round::Round\">Round</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#147\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#151\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<FBig<R, B>>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3CIBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#82\">source</a><a href=\"#impl-NumOrd%3CIBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#82\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#82\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3CRelaxed%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#31\">source</a><a href=\"#impl-NumOrd%3CRelaxed%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#31\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#31\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#31\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<Relaxed>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3CUBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#80\">source</a><a href=\"#impl-NumOrd%3CUBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#80\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#80\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cf32%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#287\">source</a><a href=\"#impl-NumOrd%3Cf32%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#287\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#287\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<f32>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cf64%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#289\">source</a><a href=\"#impl-NumOrd%3Cf64%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#289\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#289\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<f64>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Ci128%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#impl-NumOrd%3Ci128%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<i128>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Ci16%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#impl-NumOrd%3Ci16%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<i16>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Ci32%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#impl-NumOrd%3Ci32%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<i32>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Ci64%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#impl-NumOrd%3Ci64%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<i64>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Ci8%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#impl-NumOrd%3Ci8%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<i8>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cisize%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#impl-NumOrd%3Cisize%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#224\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<isize>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cu128%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#impl-NumOrd%3Cu128%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<u128>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cu16%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#impl-NumOrd%3Cu16%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<u16>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cu32%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#impl-NumOrd%3Cu32%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<u32>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cu64%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#impl-NumOrd%3Cu64%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<u64>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cu8%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#impl-NumOrd%3Cu8%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<u8>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumOrd%3Cusize%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#impl-NumOrd%3Cusize%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_order/trait.NumOrd.html\" title=\"trait num_order::NumOrd\">NumOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_cmp\" class=\"fn\">num_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" title=\"method core::cmp::Ord::cmp\">Ord::cmp</a> on different numeric types. It panics if either of the numeric values contains NaN.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/num_order.rs.html#206\">source</a><a href=\"#method.num_partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#tymethod.num_partial_cmp\" class=\"fn\">num_partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" title=\"method core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#57\">source</a><a href=\"#method.num_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_eq\" class=\"fn\">num_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" title=\"method core::cmp::PartialEq::eq\">PartialEq::eq</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#62\">source</a><a href=\"#method.num_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ne\" class=\"fn\">num_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" title=\"method core::cmp::PartialEq::ne\">PartialEq::ne</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#67\">source</a><a href=\"#method.num_lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_lt\" class=\"fn\">num_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" title=\"method core::cmp::PartialOrd::lt\">PartialOrd::lt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#72\">source</a><a href=\"#method.num_le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_le\" class=\"fn\">num_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" title=\"method core::cmp::PartialOrd::le\">PartialOrd::le</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#80\">source</a><a href=\"#method.num_gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_gt\" class=\"fn\">num_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" title=\"method core::cmp::PartialOrd::gt\">PartialOrd::gt</a> on different numeric types</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_order/lib.rs.html#85\">source</a><a href=\"#method.num_ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"num_order/trait.NumOrd.html#method.num_ge\" class=\"fn\">num_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Other</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" title=\"method core::cmp::PartialOrd::ge\">PartialOrd::ge</a> on different numeric types</div></details></div></details>","NumOrd<usize>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#10\">source</a><a href=\"#impl-Ord-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#10\">source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#903-906\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#58\">source</a><a href=\"#impl-PartialEq-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#60\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#10\">source</a><a href=\"#impl-PartialOrd-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#10\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#411\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32_fast\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#431\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.to_f32_fast\" class=\"fn\">to_f32_fast</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Convert the rational number to a <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\" title=\"primitive f32\">f32</a>.</p>\n<p>The rounding follows the default IEEE 754 behavior (rounds to nearest,\nties to even).</p>\n<p>The rounding will be correct at most of the time, but in rare cases the\nmantissa can be off by one bit. Use <a href=\"dashu/rational/struct.RBig.html#method.to_f32\" title=\"method dashu::rational::RBig::to_f32\">RBig::to_f32</a> for ensured correct\nrounding.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.to_f32_fast(), <span class=\"number\">1f32</span>);\n\n<span class=\"kw\">let </span>r = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(r.to_f32_fast(), <span class=\"number\">22.</span>/<span class=\"number\">7.</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64_fast\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#454\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.to_f64_fast\" class=\"fn\">to_f64_fast</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Convert the rational number to a <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\" title=\"primitive f64\">f64</a>.</p>\n<p>The rounding follows the default IEEE 754 behavior (rounds to nearest,\nties to even).</p>\n<p>The rounding will be correct at most of the time, but in rare cases the\nmantissa can be off by one bit. Use <a href=\"dashu/rational/struct.RBig.html#method.to_f64\" title=\"method dashu::rational::RBig::to_f64\">RBig::to_f64</a> for ensured correct\nrounding.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.to_f64_fast(), <span class=\"number\">1f64</span>);\n\n<span class=\"kw\">let </span>r = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(r.to_f64_fast(), <span class=\"number\">22.</span>/<span class=\"number\">7.</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#479\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"dashu/base/enum.Approximation.html\" title=\"enum dashu::base::Approximation\">Approximation</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the rational number to a <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\" title=\"primitive f32\">f32</a> with guaranteed correct rounding.</p>\n<p>The rounding follows the default IEEE 754 behavior (rounds to nearest,\nties to even).</p>\n<p>Because of the guaranteed rounding, it might take a long time to convert\nwhen the numerator and denominator are large. In this case <a href=\"dashu/rational/struct.RBig.html#method.to_f32_fast\" title=\"method dashu::rational::RBig::to_f32_fast\">RBig::to_f32_fast</a>\ncan be used if the correct rounding is not required.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.to_f32(), Exact(<span class=\"number\">1f32</span>));\n\n<span class=\"kw\">let </span>r = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"comment\">// f32 representation of 22/7 is smaller than the actual 22/7\n</span><span class=\"macro\">assert_eq!</span>(r.to_f32(), Inexact(<span class=\"number\">22.</span>/<span class=\"number\">7.</span>, Negative));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#504\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"dashu/base/enum.Approximation.html\" title=\"enum dashu::base::Approximation\">Approximation</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the rational number to a <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\" title=\"primitive f64\">f64</a> with guaranteed correct rounding.</p>\n<p>The rounding follows the default IEEE 754 behavior (rounds to nearest,\nties to even).</p>\n<p>Because of the guaranteed rounding, it might take a long time to convert\nwhen the numerator and denominator are large. In this case <a href=\"dashu/rational/struct.RBig.html#method.to_f64_fast\" title=\"method dashu::rational::RBig::to_f64_fast\">RBig::to_f64_fast</a>\ncan be used if the correct rounding is not required.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.to_f64(), Exact(<span class=\"number\">1f64</span>));\n\n<span class=\"kw\">let </span>r = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"comment\">// f64 representation of 22/7 is smaller than the actual 22/7\n</span><span class=\"macro\">assert_eq!</span>(r.to_f64(), Inexact(<span class=\"number\">22.</span>/<span class=\"number\">7.</span>, Negative));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_int\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#528\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.to_int\" class=\"fn\">to_int</a>(&amp;self) -&gt; <a class=\"enum\" href=\"dashu/base/enum.Approximation.html\" title=\"enum dashu::base::Approximation\">Approximation</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>, <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the rational number to an <a href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>.</p>\n<p>The conversion rounds toward zero. Itโs equivalent to <a href=\"dashu/rational/struct.RBig.html#method.trunc\" title=\"method dashu::rational::RBig::trunc\">RBig::trunc</a>,\nbut it returns the fractional part if the rational number is not an integer.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">22</span>.into(), UBig::ONE);\n<span class=\"macro\">assert_eq!</span>(a.to_int(), Exact(IBig::from(<span class=\"number\">22</span>)));\n\n<span class=\"kw\">let </span>b = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(b.to_int(), Inexact(\n    IBig::from(<span class=\"number\">3</span>), RBig::from_parts(<span class=\"number\">1</span>.into(), <span class=\"number\">7u8</span>.into())\n));</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#38\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqr\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#50\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.sqr\" class=\"fn\">sqr</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Compute the square of the number (<code>self * self</code>).</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">2</span>.into(), <span class=\"number\">3u8</span>.into());\n<span class=\"kw\">let </span>a2 = RBig::from_parts(<span class=\"number\">4</span>.into(), <span class=\"number\">9u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.sqr(), a2);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cubic\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#65\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.cubic\" class=\"fn\">cubic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Compute the cubic of the number (<code>self * self * self</code>).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">2</span>.into(), <span class=\"number\">3u8</span>.into());\n<span class=\"kw\">let </span>a3 = RBig::from_parts(<span class=\"number\">8</span>.into(), <span class=\"number\">27u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.cubic(), a3);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/mul.rs.html#80\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.pow\" class=\"fn\">pow</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Raise this number to a power of <code>n</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">2</span>.into(), <span class=\"number\">3u8</span>.into());\n<span class=\"kw\">let </span>a5 = RBig::from_parts(<span class=\"number\">32</span>.into(), <span class=\"number\">243u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.pow(<span class=\"number\">5</span>), a5);</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/parse.rs.html#58\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/parse.rs.html#76\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, <a class=\"enum\" href=\"dashu/base/enum.ParseError.html\" title=\"enum dashu::base::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert a string in a given base to <a href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>.</p>\n<p>The numerator and the denominator are separated by <code>/</code>.\n<code>src</code> may contain an optional <code>+</code> prefix.\nDigits 10-35 are represented by <code>a-z</code> or <code>A-Z</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    RBig::from_str_radix(<span class=\"string\">\"+7ab/-sse\"</span>, <span class=\"number\">32</span>)<span class=\"question-mark\">?</span>,\n    RBig::from_parts((-<span class=\"number\">7499</span>).into(), <span class=\"number\">29582u16</span>.into())\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_with_radix_prefix\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/parse.rs.html#104\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.from_str_with_radix_prefix\" class=\"fn\">from_str_with_radix_prefix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>), <a class=\"enum\" href=\"dashu/base/enum.ParseError.html\" title=\"enum dashu::base::ParseError\">ParseError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert a string with optional radix prefixes to <a href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, return the\nparsed integer and radix. If no prefix is present, then the default radix 10\nwill be used for parsing.</p>\n<p><code>src</code> may contain an โ+โ or <code>-</code> prefix before the radix prefix of both the\nnumerator and denominator.</p>\n<p>Allowed prefixes: <code>0b</code> for binary, <code>0o</code> for octal, <code>0x</code> for hexadecimal.</p>\n<p>If the radix prefixes for the numerator and the denominator are not the same,\nthen a ParseError will be returned. The radix prefix for the denominator can be\nomitted, and the radix for the numerator will used for parsing.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::from_str_with_radix_prefix(<span class=\"string\">\"+0o17/25\"</span>)<span class=\"question-mark\">?</span>,\n    (RBig::from_parts(<span class=\"number\">0o17</span>.into(), <span class=\"number\">0o25u8</span>.into()), <span class=\"number\">8</span>));\n<span class=\"macro\">assert_eq!</span>(RBig::from_str_with_radix_prefix(<span class=\"string\">\"-0x1f/-0x1e\"</span>)<span class=\"question-mark\">?</span>,\n    (RBig::from_parts(<span class=\"number\">0x1f</span>.into(), <span class=\"number\">0x1eu8</span>.into()), <span class=\"number\">16</span>));</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#30\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#32\">source</a><h4 class=\"code-header\">pub const <a href=\"dashu/rational/struct.RBig.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> = _</h4></section></summary><div class=\"docblock\"><p><a href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> with value 0</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#34\">source</a><h4 class=\"code-header\">pub const <a href=\"dashu/rational/struct.RBig.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> = _</h4></section></summary><div class=\"docblock\"><p><a href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> with value 1</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NEG_ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#36\">source</a><h4 class=\"code-header\">pub const <a href=\"dashu/rational/struct.RBig.html#associatedconstant.NEG_ONE\" class=\"constant\">NEG_ONE</a>: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> = _</h4></section></summary><div class=\"docblock\"><p><a href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> with value -1</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_parts\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#50\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.from_parts\" class=\"fn\">from_parts</a>(numerator: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>, denominator: <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Create a rational number from a signed numerator and an unsigned denominator</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::from_parts(IBig::ZERO, UBig::ONE), RBig::ZERO);\n<span class=\"macro\">assert_eq!</span>(RBig::from_parts(IBig::ONE, UBig::ONE), RBig::ONE);\n<span class=\"macro\">assert_eq!</span>(RBig::from_parts(IBig::NEG_ONE, UBig::ONE), RBig::NEG_ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_parts\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#76\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.into_parts\" class=\"fn\">into_parts</a>(self) -&gt; (<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>, <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>)</h4></section></summary><div class=\"docblock\"><p>Convert the rational number into (numerator, denumerator) parts.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ZERO.into_parts(), (IBig::ZERO, UBig::ONE));\n<span class=\"macro\">assert_eq!</span>(RBig::ONE.into_parts(), (IBig::ONE, UBig::ONE));\n<span class=\"macro\">assert_eq!</span>(RBig::NEG_ONE.into_parts(), (IBig::NEG_ONE, UBig::ONE));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_parts_signed\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#91\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.from_parts_signed\" class=\"fn\">from_parts_signed</a>(numerator: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>, denominator: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Create a rational number from a signed numerator and a signed denominator</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::from_parts_signed(<span class=\"number\">1</span>.into(), <span class=\"number\">1</span>.into()), RBig::ONE);\n<span class=\"macro\">assert_eq!</span>(RBig::from_parts_signed(<span class=\"number\">12</span>.into(), (-<span class=\"number\">12</span>).into()), RBig::NEG_ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_parts_const\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#112-116\">source</a><h4 class=\"code-header\">pub const fn <a href=\"dashu/rational/struct.RBig.html#tymethod.from_parts_const\" class=\"fn\">from_parts_const</a>(\n    sign: <a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a>,\n    numerator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>,\n    denominator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Create a rational number in a const context</p>\n<p>The magnitude of the numerator and the denominator is limited to\na <a href=\"dashu/integer/type.DoubleWord.html\" title=\"type dashu::integer::DoubleWord\">DoubleWord</a>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">const </span>ONE: RBig = RBig::from_parts_const(Sign::Positive, <span class=\"number\">1</span>, <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(ONE, RBig::ONE);\n<span class=\"kw\">const </span>NEG_ONE: RBig = RBig::from_parts_const(Sign::Negative, <span class=\"number\">1</span>, <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NEG_ONE, RBig::NEG_ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.numerator\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#154\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.numerator\" class=\"fn\">numerator</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section></summary><div class=\"docblock\"><p>Get the numerator of the rational number</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ZERO.numerator(), <span class=\"kw-2\">&amp;</span>IBig::ZERO);\n<span class=\"macro\">assert_eq!</span>(RBig::ONE.numerator(), <span class=\"kw-2\">&amp;</span>IBig::ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.denominator\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#169\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.denominator\" class=\"fn\">denominator</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a></h4></section></summary><div class=\"docblock\"><p>Get the denominator of the rational number</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ZERO.denominator(), <span class=\"kw-2\">&amp;</span>UBig::ONE);\n<span class=\"macro\">assert_eq!</span>(RBig::ONE.denominator(), <span class=\"kw-2\">&amp;</span>UBig::ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relax\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#183\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.relax\" class=\"fn\">relax</a>(self) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a></h4></section></summary><div class=\"docblock\"><p>Convert this rational number into a <a href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a> version</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ZERO.relax(), Relaxed::ZERO);\n<span class=\"macro\">assert_eq!</span>(RBig::ONE.relax(), Relaxed::ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_relaxed\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#195\">source</a><h4 class=\"code-header\">pub const fn <a href=\"dashu/rational/struct.RBig.html#tymethod.as_relaxed\" class=\"fn\">as_relaxed</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a></h4></section></summary><div class=\"docblock\"><p>Regard the number as a <a href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a> number and return a reference of <a href=\"dashu/rational/struct.Relaxed.html\" title=\"struct dashu::rational::Relaxed\">Relaxed</a> type.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.as_relaxed(), <span class=\"kw-2\">&amp;</span>Relaxed::ONE);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#212\">source</a><h4 class=\"code-header\">pub const fn <a href=\"dashu/rational/struct.RBig.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the number is 0</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(RBig::ZERO.is_zero());\n<span class=\"macro\">assert!</span>(!RBig::ONE.is_zero());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#226\">source</a><h4 class=\"code-header\">pub const fn <a href=\"dashu/rational/struct.RBig.html#tymethod.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether the number is 1</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(!RBig::ZERO.is_one());\n<span class=\"macro\">assert!</span>(RBig::ONE.is_one());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_int\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/rbig.rs.html#240\">source</a><h4 class=\"code-header\">pub const fn <a href=\"dashu/rational/struct.RBig.html#tymethod.is_int\" class=\"fn\">is_int</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Determine if the number can be regarded as an integer.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(RBig::ZERO.is_int());\n<span class=\"macro\">assert!</span>(RBig::ONE.is_int());</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/round.rs.html#71\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_at_point\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/round.rs.html#89\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.split_at_point\" class=\"fn\">split_at_point</a>(self) -&gt; (<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>, <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class=\"docblock\"><p>Split the rational number into integral and fractional parts (split at the radix point).</p>\n<p>Itโs return is equivalent to <code>(self.trunc(), self.fract())</code></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.split_at_point(), (IBig::ONE, RBig::ZERO));\n\n<span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"kw\">let </span>(trunc, fract) = a.split_at_point();\n<span class=\"macro\">assert_eq!</span>(trunc, IBig::from(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(fract, RBig::from_parts(<span class=\"number\">1</span>.into(), <span class=\"number\">7u8</span>.into()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/round.rs.html#107\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.ceil\" class=\"fn\">ceil</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section></summary><div class=\"docblock\"><p>Compute the least integer that is greater than or equal to this number.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.ceil(), IBig::ONE);\n\n<span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.ceil(), IBig::from(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/round.rs.html#124\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.floor\" class=\"fn\">floor</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section></summary><div class=\"docblock\"><p>Compute the greatest integer that is less than or equal to this number.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.floor(), IBig::ONE);\n\n<span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.floor(), IBig::from(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/round.rs.html#143\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.round\" class=\"fn\">round</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section></summary><div class=\"docblock\"><p>Compute the integer that closest to this number.</p>\n<p>It will return the one farther from zero when the number has the 1/2 as its fractional part.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.round(), IBig::ONE);\n\n<span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.round(), IBig::from(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunc\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/round.rs.html#162\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.trunc\" class=\"fn\">trunc</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a></h4></section></summary><div class=\"docblock\"><p>Returns the integral part of the rational number.</p>\n<p>Itโs guaranteed that <code>self == self.trunc() + self.fract()</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.trunc(), IBig::ONE);\n\n<span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.trunc(), IBig::from(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fract\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/round.rs.html#181\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.fract\" class=\"fn\">fract</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Returns the fractional part of the rational number</p>\n<p>Itโs guaranteed that <code>self == self.trunc() + self.fract()</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ONE.fract(), RBig::ZERO);\n\n<span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(a.fract(), RBig::from_parts(<span class=\"number\">1</span>.into(), <span class=\"number\">7u8</span>.into()));</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#10\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#23\">source</a><h4 class=\"code-header\">pub const fn <a href=\"dashu/rational/struct.RBig.html#tymethod.sign\" class=\"fn\">sign</a>(&amp;self) -&gt; <a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a></h4></section></summary><div class=\"docblock\"><p>Get the sign of the number. Zero value has a positive sign.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RBig::ZERO.sign(), Sign::Positive);\n<span class=\"macro\">assert_eq!</span>(RBig::ONE.sign(), Sign::Positive);\n<span class=\"macro\">assert_eq!</span>(RBig::NEG_ONE.sign(), Sign::Negative);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#42\">source</a><h4 class=\"code-header\">pub const fn <a href=\"dashu/rational/struct.RBig.html#tymethod.signum\" class=\"fn\">signum</a>(&amp;self) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>A number representing the sign of <code>self</code>.</p>\n<ul>\n<li><a href=\"dashu/rational/struct.RBig.html#associatedconstant.ONE\" title=\"associated constant dashu::rational::RBig::ONE\">RBig::ONE</a> if the number is positive (including <code>inf</code>)</li>\n<li><a href=\"dashu/rational/struct.RBig.html#associatedconstant.ZERO\" title=\"associated constant dashu::rational::RBig::ZERO\">RBig::ZERO</a> if the number is zero</li>\n<li><a href=\"dashu/rational/struct.RBig.html#associatedconstant.NEG_ONE\" title=\"associated constant dashu::rational::RBig::NEG_ONE\">RBig::NEG_ONE</a> if the number is negative (including <code>-inf</code>)</li>\n</ul>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>r = RBig::from_parts((-<span class=\"number\">10</span>).into(), <span class=\"number\">5u8</span>.into());\n<span class=\"macro\">assert_eq!</span>(r.signum(), RBig::NEG_ONE);</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#115\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_simpler_than\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#120\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.is_simpler_than\" class=\"fn\">is_simpler_than</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Determine if this rational number is simpler than the other number.</p>\n<p>This method only make sense for canonicalized ratios.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simplest_from_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#154\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.simplest_from_f32\" class=\"fn\">simplest_from_f32</a>(f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find the simplest rational number in the rounding interval of the <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\" title=\"primitive f32\">f32</a> number.</p>\n<p>This method returns None when the floating point value is not representable by a rational number,\nsuch as infinities or nans.</p>\n<p>See <a href=\"dashu/rational/struct.RBig.html#method.simplest_in\" title=\"associated function dashu::rational::RBig::simplest_in\">RBig::simplest_in</a> for the definition of <code>simplicity</code>.</p>\n<p>The rounding interval of a <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\" title=\"primitive f32\">f32</a> value is an interval such that all numbers in this\nrange will rounded to this <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\" title=\"primitive f32\">f32</a> value. For example the rounding interval for <code>1f32</code>\nis <code>[1. - f32::EPSILON / 2, 1. + f32::EPSILON / 2]</code>. That is, the error of result value will\nbe less than 1/2 ULP.</p>\n<p>This method can be used to recover the original fraction represented as a division of <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\" title=\"primitive f32\">f32</a>.\nSee the examples below.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    RBig::simplest_from_f32(<span class=\"number\">1e-1</span>).unwrap(),\n    RBig::from_parts(<span class=\"number\">1</span>.into(), <span class=\"number\">10u8</span>.into())\n);\n<span class=\"macro\">assert_eq!</span>(\n    RBig::simplest_from_f32(<span class=\"number\">22.</span>/<span class=\"number\">7.</span>).unwrap(),\n    RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into())\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simplest_from_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#185\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.simplest_from_f64\" class=\"fn\">simplest_from_f64</a>(f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find the simplest rational number in the rounding interval of the <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\" title=\"primitive f64\">f64</a> number.</p>\n<p>This method returns None when the floating point value is not representable by a rational number,\nsuch as infinities or nans.</p>\n<p>See <a href=\"dashu/rational/struct.RBig.html#method.simplest_in\" title=\"associated function dashu::rational::RBig::simplest_in\">RBig::simplest_in</a> for the definition of <code>simplicity</code>.</p>\n<p>The rounding interval of a <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\" title=\"primitive f64\">f64</a> value is an interval such that all numbers in this\nrange will rounded to this <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\" title=\"primitive f64\">f64</a> value. For example the rounding interval for <code>1f64</code>\nis <code>[1. - f64::EPSILON / 2, 1. + f64::EPSILON / 2]</code>. That is, the error of result value will\nbe less than 1/2 ULP.</p>\n<p>This method can be used to recover the original fraction represented as a division of <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\" title=\"primitive f64\">f64</a>.\nSee the examples below.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(\n    RBig::simplest_from_f64(<span class=\"number\">1e-1</span>).unwrap(),\n    RBig::from_parts(<span class=\"number\">1</span>.into(), <span class=\"number\">10u8</span>.into())\n);\n<span class=\"macro\">assert_eq!</span>(\n    RBig::simplest_from_f64(<span class=\"number\">22.</span>/<span class=\"number\">7.</span>).unwrap(),\n    RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into())\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simplest_in\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#211\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.simplest_in\" class=\"fn\">simplest_in</a>(lower: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, upper: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Find the simplest rational number in the open interval <code>(lower, upper)</code>.</p>\n<p>A rational <code>nโ/dโ</code> is simpler than another rational number <code>nโ/dโ</code> if:</p>\n<ul>\n<li><code>dโ &lt; dโ</code> (compare denominator)</li>\n<li>or <code>|nโ| &lt; |nโ|</code> (then compare the magnitude of numerator)</li>\n<li>or <code>nโ &lt; 0 &lt; nโ</code> (then compare the sign)</li>\n</ul>\n<p><code>lower</code> and <code>upper</code> will be swapped if necessary. If <code>lower</code> and <code>upper</code> are\nthe same number, then this number will be directly returned.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = RBig::from_parts(<span class=\"number\">1234</span>.into(), <span class=\"number\">5678u16</span>.into());\n<span class=\"kw\">let </span>b = RBig::from_parts(<span class=\"number\">1235</span>.into(), <span class=\"number\">5679u16</span>.into());\n<span class=\"kw\">let </span>s = RBig::simplest_in(a, b);\n<span class=\"comment\">// 1234/5678 &lt; 5/23 &lt; 1235/5679\n</span><span class=\"macro\">assert_eq!</span>(s, RBig::from_parts(<span class=\"number\">5</span>.into(), <span class=\"number\">23u8</span>.into()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nearest\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#273\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.nearest\" class=\"fn\">nearest</a>(&amp;self, limit: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"enum\" href=\"dashu/base/enum.Approximation.html\" title=\"enum dashu::base::Approximation\">Approximation</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, <a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find the closest rational number to this number with a limit of the denominator.</p>\n<p>If the denominator of this number is larger than the limit, then it returns the closest one\nbetween <code>self.next_up()</code> and <code>self.next_down()</code> to <code>self</code>. If the denominator of this number\nis already less than or equal to the limit, then <code>Exact(self)</code> will be returned.</p>\n<p>The error <code>|self - self.nearest()|</code> will be less than <code>1/(2*limit)</code>, and the sign of\nthe error <code>self - self.nearest()</code> will be returned if the result is not <a href=\"dashu/base/enum.Approximation.html#variant.Exact\" title=\"variant dashu::base::Approximation::Exact\">Exact</a>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: RBig = <span class=\"number\">3.141592653</span>.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a.nearest(<span class=\"kw-2\">&amp;</span><span class=\"number\">10u8</span>.into()), Inexact(\n    RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into()),\n    Sign::Positive <span class=\"comment\">// 22/7 &gt; 3.141592653\n</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_up\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#308\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.next_up\" class=\"fn\">next_up</a>(&amp;self, limit: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Find the closest rational number that is greater than this number and has a denominator less than <code>limit</code>.</p>\n<p>Itโs equivalent to finding the next element in Farey sequence of order <code>limit</code>. The error\n<code>|self - self.next_up()|</code> will be less than <code>1/limit</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: RBig = <span class=\"number\">3.141592653</span>.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a.next_up(<span class=\"kw-2\">&amp;</span><span class=\"number\">10u8</span>.into()), RBig::from_parts(<span class=\"number\">22</span>.into(), <span class=\"number\">7u8</span>.into()));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_down\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/simplify.rs.html#343\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.next_down\" class=\"fn\">next_down</a>(&amp;self, limit: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class=\"docblock\"><p>Find the closest rational number that is less than this number and has a denominator less than <code>limit</code>.</p>\n<p>Itโs equivalent to finding the previous element in Farey sequence of order <code>limit</code>. The error\n<code>|self - self.next_down()|</code> will be less than <code>1/limit</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a: RBig = <span class=\"number\">3.141592653</span>.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a.next_down(<span class=\"kw-2\">&amp;</span><span class=\"number\">10u8</span>.into()), RBig::from_parts(<span class=\"number\">25</span>.into(), <span class=\"number\">8u8</span>.into()));</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/dashu_float.rs.html#147\">source</a><a href=\"#impl-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_float\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/dashu_float.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.to_float\" class=\"fn\">to_float</a>&lt;R, const B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt;(\n    &amp;self,\n    precision: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"dashu/base/enum.Approximation.html\" title=\"enum dashu::base::Approximation\">Approximation</a>&lt;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;, <a class=\"enum\" href=\"dashu/float/round/enum.Rounding.html\" title=\"enum dashu::float::round::Rounding\">Rounding</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"dashu/float/round/trait.Round.html\" title=\"trait dashu::float::round::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert the rational number to a <a href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a> with guaranteed correct rounding.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>dashu_float::{DBig, round::Rounding::<span class=\"kw-2\">*</span>};\n\n<span class=\"macro\">assert_eq!</span>(RBig::ONE.to_float(<span class=\"number\">1</span>), Exact(DBig::ONE));\n<span class=\"macro\">assert_eq!</span>(RBig::from(<span class=\"number\">1000</span>).to_float(<span class=\"number\">4</span>), Exact(DBig::from(<span class=\"number\">1000</span>)));\n<span class=\"macro\">assert_eq!</span>(RBig::from_parts(<span class=\"number\">1000</span>.into(), <span class=\"number\">6u8</span>.into()).to_float(<span class=\"number\">4</span>),\n    Inexact(DBig::from_parts(<span class=\"number\">1667</span>.into(), -<span class=\"number\">1</span>), AddOne));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simplest_from_float\" class=\"method\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/dashu_float.rs.html#181\">source</a><h4 class=\"code-header\">pub fn <a href=\"dashu/rational/struct.RBig.html#tymethod.simplest_from_float\" class=\"fn\">simplest_from_float</a>&lt;R, const B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt;(f: &amp;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"dashu/float/round/trait.ErrorBounds.html\" title=\"trait dashu::float::round::ErrorBounds\">ErrorBounds</a>,</div></h4></section></summary><div class=\"docblock\"><h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">ยง</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>dashu_float::DBig;\n\n<span class=\"kw\">let </span>f = DBig::from_str_native(<span class=\"string\">\"4.00\"</span>)<span class=\"question-mark\">? </span>/ DBig::from_str_native(<span class=\"string\">\"3.00\"</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>r = RBig::from_str_radix(<span class=\"string\">\"4/3\"</span>, <span class=\"number\">10</span>)<span class=\"question-mark\">?</span>;\n<span class=\"macro\">assert_eq!</span>(RBig::simplest_from_float(<span class=\"kw-2\">&amp;</span>f), <span class=\"prelude-val\">Some</span>(r));\n<span class=\"macro\">assert_eq!</span>(RBig::simplest_from_float(<span class=\"kw-2\">&amp;</span>DBig::INFINITY), <span class=\"prelude-val\">None</span>);\n</code></pre></div>\n</div></details></div></details>",0,"dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#95\">source</a><a href=\"#impl-Rem%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#95\">source</a><a href=\"#method.rem\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#95\">source</a><a href=\"#impl-Rem-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#95\">source</a><a href=\"#method.rem\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#97\">source</a><a href=\"#impl-RemAssign%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#97\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#97\">source</a><a href=\"#impl-RemAssign-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#97\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemEuclid%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#207\">source</a><a href=\"#impl-RemEuclid%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"dashu/rational/ops/trait.RemEuclid.html\" title=\"trait dashu::rational::ops::RemEuclid\">RemEuclid</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.RemEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#207\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.RemEuclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></div></details>","RemEuclid<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemEuclid-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#207\">source</a><a href=\"#impl-RemEuclid-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/rational/ops/trait.RemEuclid.html\" title=\"trait dashu::rational::ops::RemEuclid\">RemEuclid</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"dashu/rational/ops/trait.RemEuclid.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/div.rs.html#207\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/rational/ops/trait.RemEuclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></div></details>","RemEuclid","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#154\">source</a><a href=\"#impl-Signed-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"dashu/base/trait.Signed.html\" title=\"trait dashu::base::Signed\">Signed</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.sign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/sign.rs.html#156\">source</a><a href=\"#method.sign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.Signed.html#tymethod.sign\" class=\"fn\">sign</a>(&amp;self) -&gt; <a class=\"enum\" href=\"dashu/integer/enum.Sign.html\" title=\"enum dashu::integer::Sign\">Sign</a></h4></section><section id=\"method.is_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/sign.rs.html#84\">source</a><a href=\"#method.is_positive\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.Signed.html#method.is_positive\" class=\"fn\">is_positive</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_base/sign.rs.html#88\">source</a><a href=\"#method.is_negative\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"dashu/base/trait.Signed.html#method.is_negative\" class=\"fn\">is_negative</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></div></details>","Signed","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26IBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#90\">source</a><a href=\"#impl-Sub%3C%26IBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#90\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'r IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#44\">source</a><a href=\"#impl-Sub%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#44\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'r RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26UBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#89\">source</a><a href=\"#impl-Sub%3C%26UBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'r <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#89\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'r UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CIBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#90\">source</a><a href=\"#impl-Sub%3CIBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#90\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.IBig.html\" title=\"struct dashu::integer::IBig\">IBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<IBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CUBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#89\">source</a><a href=\"#impl-Sub%3CUBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#89\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"dashu/integer/struct.UBig.html\" title=\"struct dashu::integer::UBig\">UBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<UBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#44\">source</a><a href=\"#impl-Sub-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#44\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>) -&gt; <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26RBig%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#46\">source</a><a href=\"#impl-SubAssign%3C%26RBig%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#46\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&RBig>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#46\">source</a><a href=\"#impl-SubAssign-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/add.rs.html#46\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CFBig%3CR,+B%3E%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/dashu_float.rs.html#102\">source</a><a href=\"#impl-TryFrom%3CFBig%3CR,+B%3E%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;R, const B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"dashu/float/round/trait.Round.html\" title=\"trait dashu::float::round::Round\">Round</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu/base/enum.ConversionError.html\" title=\"enum dashu::base::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/dashu_float.rs.html#102\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, &lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"dashu/float/struct.FBig.html\" title=\"struct dashu::float::FBig\">FBig</a>&lt;R, B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<FBig<R, B>>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CRepr%3CB%3E%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/dashu_float.rs.html#102\">source</a><a href=\"#impl-TryFrom%3CRepr%3CB%3E%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;const B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"dashu/float/struct.Repr.html\" title=\"struct dashu::float::Repr\">Repr</a>&lt;B&gt;&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu/base/enum.ConversionError.html\" title=\"enum dashu::base::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/third_party/dashu_float.rs.html#102\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"dashu/float/struct.Repr.html\" title=\"struct dashu::float::Repr\">Repr</a>&lt;B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, &lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"dashu/float/struct.Repr.html\" title=\"struct dashu::float::Repr\">Repr</a>&lt;B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Repr<B>>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cf32%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#161\">source</a><a href=\"#impl-TryFrom%3Cf32%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu/base/enum.ConversionError.html\" title=\"enum dashu::base::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#161\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, &lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<f32>","dashu::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cf64%3E-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#162\">source</a><a href=\"#impl-TryFrom%3Cf64%3E-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"dashu/base/enum.ConversionError.html\" title=\"enum dashu::base::ConversionError\">ConversionError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/convert.rs.html#162\">source</a><a href=\"#method.try_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a>, &lt;<a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<f64>","dashu::Rational"],["<section id=\"impl-Eq-for-RBig\" class=\"impl\"><a class=\"src rightside\" href=\"src/dashu_ratio/cmp.rs.html#65\">source</a><a href=\"#impl-Eq-for-RBig\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"dashu/rational/struct.RBig.html\" title=\"struct dashu::rational::RBig\">RBig</a></h3></section>","Eq","dashu::Rational"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()