searchState.loadedDescShard("dashu_ratio", 0, "A big rational library with good performance.\nRBig with value -1\nRelaxed with value -1\nRBig with value 1\nRelaxed with value 1\nAn arbitrary precision rational number.\nAn arbitrary precision rational number without strict …\nRBig with value 0\nRelaxed with value 0\nRegard the number as a Relaxed number and return a …\nConvert this rational number into an RBig version\nCompute the least integer that is greater than or equal to …\nCompute the smallest integer that is greater than this …\nCompute the cubic of the number (<code>self * self * self</code>).\nCompute the cubic of the number (<code>self * self * self</code>).\nGet the denominator of the rational number\nGet the denominator of the rational number\nCompute the greatest integer that is less than or equal to …\nCompute the largest integer that is less than or equal to …\nReturns the fractional part of the rational number\nReturns the fractional part of the rational number\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a rational number from a signed numerator and an …\nCreate a rational number from a signed numerator and a …\nCreate a rational number in a const context\nCreate a rational number in a const context\nCreate a rational number from a signed numerator and a …\nCreate a rational number from a signed numerator and a …\nConvert a string in a given base to RBig.\nConvert a string in a given base to Relaxed.\nConvert a string with optional radix prefixes to RBig, …\nConvert a string with optional radix prefixes to RBig, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the rational number into (numerator, denumerator) …\nConvert the rational number into (numerator, denumerator) …\nDetermine if the number can be regarded as an integer.\nCheck whether the number is 1\nCheck whether the number is 1\nDetermine if this rational number is simpler than the …\nCheck whether the number is 0\nCheck whether the number is 0\nFind the closest rational number to this number with a …\nFind the closest rational number that is less than this …\nFind the closest rational number that is greater than this …\nGet the numerator of the rational number\nGet the numerator of the rational number\nRe-exported relevant operator traits from <code>dashu-base</code>\nRaise this number to a power of <code>n</code>.\nRaise this number to a power of <code>n</code>.\nConvert this rational number into a Relaxed version\nCompute the integer that closest to this number.\nCompute the integer that closest to this number.\nGet the sign of the number. Zero value has a positive sign.\nGet the sign of the number. Zero value has a positive sign.\nA number representing the sign of <code>self</code>.\nA number representing the sign of <code>self</code>.\nFind the simplest rational number in the rounding interval …\nFind the simplest rational number in the rounding interval …\nExamples\nFind the simplest rational number in the open interval …\nSplit the rational number into integral and fractional …\nSplit the rational number into integral and fractional …\nCompute the square of the number (<code>self * self</code>).\nCompute the square of the number (<code>self * self</code>).\nConvert the rational number to a f32 with guaranteed …\nConvert the rational number to a f32 with guaranteed …\nConvert the rational number to a f32.\nConvert the rational number to a f32.\nConvert the rational number to a f64 with guaranteed …\nConvert the rational number to a f64 with guaranteed …\nConvert the rational number to a f64.\nConvert the rational number to a f64.\nConvert the rational number to a FBig with guaranteed …\nConvert the rational number to a FBig with guaranteed …\nConvert the rational number to an IBig.\nConvert the rational number to am IBig.\nReturns the integral part of the rational number.\nReturns the integral part of the rational number.\nAbsolute value.\nCompute Euclidean quotient.\nCompute Euclidean quotient and remainder at the same time.\nFast estimation of the binary logarithm of a number\nCompute Euclidean remainder.\nEstimate the bounds of the binary logarithm.\nEstimate the value of the binary logarithm. It’s …")